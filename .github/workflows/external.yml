name: External Server Tests

on:
    pull_request:
    push:
    schedule:
      - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Do build
      run: make REDIS_CFLAGS=-Werror
    - name: Cache build artifacts
      id: cache-build
      uses: actions/cache@v4
      with:
        path: ./
        key: ${{ runner.os }}-build

  test-external-standalone:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' || github.repository == 'redis/redis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v3
    - name: Restore build
      uses: actions/cache@v4
      with:
        path: ./
        key: ${{ runner.os }}-build
    - name: Start redis-server
      run: |
        ./src/redis-server --daemonize yes --save "" --logfile external-redis.log \
          --enable-protected-configs yes --enable-debug-command yes --enable-module-command yes
    - name: Run external test
      run: |
          ./runtest \
            --host 127.0.0.1 --port 6379 \
            --verbose \
            --tags -slow
    - name: Archive redis log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-external-redis-log
        path: external-redis.log

  test-external-cluster:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' || github.repository == 'redis/redis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v3
    - name: Restore build
      uses: actions/cache@v4
      with:
        path: ./
        key: ${{ runner.os }}-build
    - name: Start redis-server
      run: |
        ./src/redis-server --cluster-enabled yes --daemonize yes --save "" --logfile external-redis.log \
          --enable-protected-configs yes --enable-debug-command yes --enable-module-command yes
    - name: Create a single node cluster
      run: ./src/redis-cli cluster addslots $(for slot in {0..16383}; do echo $slot; done); sleep 5
    - name: Run external test
      run: |
          ./runtest \
            --host 127.0.0.1 --port 6379 \
            --verbose \
            --cluster-mode \
            --tags -slow
    - name: Archive redis log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-external-cluster-log
        path: external-redis.log

  test-external-nodebug:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' || github.repository == 'redis/redis'
    timeout-minutes: 14400
    steps:
      - uses: actions/checkout@v3
      - name: Restore build
        uses: actions/cache@v4
        with:
          path: ./
          key: ${{ runner.os }}-build
      - name: Start redis-server
        run: |
          ./src/redis-server --daemonize yes --save "" --logfile external-redis.log
      - name: Run external test
        run: |
          ./runtest \
            --host 127.0.0.1 --port 6379 \
            --verbose \
            --tags "-slow -needs:debug"
      - name: Archive redis log
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-external-redis-log
          path: external-redis.log

